{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.sharedDataChanged = new Subject();\n  }\n  setSharedData(data) {\n    this.sharedData = data;\n    this.sharedDataChanged.next(dat);\n  }\n  getSharedData() {\n    return this.sharedData;\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","DataService","constructor","sharedDataChanged","setSharedData","data","sharedData","next","dat","getSharedData","_","_2","factory","ɵfac","providedIn"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/data.service.ts"],"sourcesContent":["import {  Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n private sharedData: any;\nsharedDataChanged = new Subject<any>();\n  setSharedData(data: any) {\n    this.sharedData = data;\n    this.sharedDataChanged.next(dat)\n  }\n\n  getSharedData() {\n    return this.sharedData;\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAI9B,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKA,KAAAC,iBAAiB,GAAG,IAAIH,OAAO,EAAO;;EACpCI,aAAaA,CAACC,IAAS;IACrB,IAAI,CAACC,UAAU,GAAGD,IAAI;IACtB,IAAI,CAACF,iBAAiB,CAACI,IAAI,CAACC,GAAG,CAAC;EAClC;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,UAAU;EACxB;EAAC,QAAAI,CAAA,G;qBAVUT,WAAW;EAAA;EAAA,QAAAU,EAAA,G;WAAXV,WAAW;IAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}