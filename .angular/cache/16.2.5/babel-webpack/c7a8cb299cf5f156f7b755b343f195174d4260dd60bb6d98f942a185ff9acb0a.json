{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/';\n    this.editMode = false;\n    this.editId = +localStorage.getItem('diplayIndex');\n  }\n  setSharedData(data) {\n    this.sharedData = data;\n  }\n  getSharedData() {\n    return this.sharedData;\n  }\n  // *************** API Calls *******************\n  getData() {\n    return this.http.get(this.url + 'users');\n  }\n  fetchData(id) {\n    return this.http.get(this.url + 'users/' + id);\n  }\n  postData(data) {\n    return this.http.post(this.url + 'users', data);\n  }\n  putData(data) {\n    return this.http.put(this.url + 'users/' + this.editId, data);\n  }\n  deleteData(id) {\n    return this.http.delete(this.url + 'users/' + id);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DataService","constructor","http","url","editMode","editId","localStorage","getItem","setSharedData","data","sharedData","getSharedData","getData","get","fetchData","id","postData","post","putData","put","deleteData","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport {  Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  url = 'http://localhost:3000/';\n  constructor(private http: HttpClient) {}\n\n  private sharedData: any;\n  editMode: boolean = false;\n  editId: number = +localStorage.getItem('diplayIndex');\n  l\n  setSharedData(data: any) {\n    this.sharedData = data;\n  }\n\n  getSharedData() {\n    return this.sharedData;\n  }\n\n  // *************** API Calls *******************\n\n  getData() {\n    return this.http.get(this.url + 'users');\n  }\n  fetchData(id: number) {\n    return this.http.get(this.url + 'users/' + id);\n  }\n\n  postData(data: any) {\n    return this.http.post(this.url + 'users', data);\n  }\n\n  putData(data: any) {\n    return this.http.put(this.url + 'users/' + this.editId, data);\n  }\n\n  deleteData(id: number) {\n    return this.http.delete(this.url + 'users/' + id);\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,GAAG,GAAG,wBAAwB;IAI9B,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,MAAM,GAAW,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAJd;EAMvCC,aAAaA,CAACC,IAAS;IACrB,IAAI,CAACC,UAAU,GAAGD,IAAI;EACxB;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEA;EAEAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,GAAG,GAAG,OAAO,CAAC;EAC1C;EACAW,SAASA,CAACC,EAAU;IAClB,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,GAAG,GAAG,QAAQ,GAAGY,EAAE,CAAC;EAChD;EAEAC,QAAQA,CAACP,IAAS;IAChB,OAAO,IAAI,CAACP,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,GAAG,GAAG,OAAO,EAAEM,IAAI,CAAC;EACjD;EAEAS,OAAOA,CAACT,IAAS;IACf,OAAO,IAAI,CAACP,IAAI,CAACiB,GAAG,CAAC,IAAI,CAAChB,GAAG,GAAG,QAAQ,GAAG,IAAI,CAACE,MAAM,EAAEI,IAAI,CAAC;EAC/D;EAEAW,UAAUA,CAACL,EAAU;IACnB,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,IAAI,CAAClB,GAAG,GAAG,QAAQ,GAAGY,EAAE,CAAC;EACnD;EAAC,QAAAO,CAAA,G;qBAnCUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX3B,WAAW;IAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}