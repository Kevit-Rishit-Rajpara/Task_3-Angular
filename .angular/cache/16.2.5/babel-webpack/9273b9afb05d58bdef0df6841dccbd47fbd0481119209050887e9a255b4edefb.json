{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let UserFormComponent = class UserFormComponent {\n  constructor(formBuilder, dataService, router, route) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n    this.submitted = false;\n    this.qualification = '';\n    this.editedData = this.route.snapshot.state.data;\n    this.answer = {\n      name: '',\n      dob: '',\n      email: '',\n      number: '',\n      schoolName: '',\n      qualification: '',\n      percentage: '',\n      hobby: [],\n      gender: '',\n      address: '',\n      summery: ''\n    };\n  }\n  ngOnInit() {\n    this.userDataForm = this.formBuilder.group({\n      'name': new FormControl('rishit', Validators.required),\n      'dob': new FormControl('12/30/2002', Validators.required),\n      'email': new FormControl('rishit@gmail.com', [Validators.required, Validators.email]),\n      'number': new FormControl('999999', Validators.required),\n      'schoolName': new FormControl('vvp', Validators.required),\n      'qualification': new FormControl('HSC', Validators.required),\n      'percentage': new FormControl('99', Validators.required),\n      'hobby': new FormGroup({\n        'cricket': new FormControl(null),\n        'travelling': new FormControl(null),\n        'music': new FormControl(null),\n        'finance': new FormControl(null),\n        'others': new FormControl(null)\n      }),\n      'gender': new FormControl('male', Validators.required),\n      'address': new FormControl(null),\n      'summery': new FormControl(null)\n    });\n    if (data) {\n      this.setFormData(data);\n    }\n  }\n  changeQua(e) {\n    console.log(e.target.value);\n    this.qualification = e.target.value;\n    console.log(this.userDataForm.value.hobby);\n    // console.log(this.qualification);\n    // this.qualification.setValue(e.target.value)\n  }\n\n  onSubmit(data) {\n    if (!this.userDataForm.valid) {\n      alert(\"Please enter Valid Data\");\n    } else {\n      console.log(this.userDataForm.value);\n      // console.log(this.userDataForm.value);\n      this.dataService.setSharedData(this.userDataForm.value);\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Data Saved',\n        showConfirmButton: false,\n        timer: 800\n      });\n      this.router.navigate(['/details']);\n    }\n  }\n  edit(editGetData) {\n    console.log(editGetData);\n    // this.userDataForm.setValue({\n    //   'name' : editGetData.name,\n    //   'dob' : new FormControl('12/30/2002', Validators.required),\n    //   'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n    //   'number' : new FormControl('999999', Validators.required),\n    //   'schoolName': new FormControl('vvp', Validators.required),\n    //   'qualification': new FormControl('HSC', Validators.required),\n    //   'percentage': new FormControl('99', Validators.required),\n    //    'hobby': new FormGroup({\n    //     'cricket' : new FormControl(null),\n    //     'travelling' : new FormControl(null),\n    //     'music' : new FormControl(null),\n    //     'finance' : new FormControl(null),\n    //     'others' : new FormControl(null),\n    //   }),\n    //   'gender' : new FormControl('male', Validators.required),\n    //   'address' : new FormControl(null),\n    //   'summery' : new FormControl(null)\n    // })\n  }\n};\n\nUserFormComponent = __decorate([Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})], UserFormComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Swal","UserFormComponent","constructor","formBuilder","dataService","router","route","submitted","qualification","editedData","snapshot","state","data","answer","name","dob","email","number","schoolName","percentage","hobby","gender","address","summery","ngOnInit","userDataForm","group","required","setFormData","changeQua","e","console","log","target","value","onSubmit","valid","alert","setSharedData","fire","position","icon","title","showConfirmButton","timer","navigate","edit","editGetData","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/kevit/Documents/Angular Tasks/Task_2/src/app/user-form/user-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport {  Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit{\n  userDataForm: FormGroup;\n  submitted = false;\n  qualification = '';\n  constructor(private formBuilder: FormBuilder,private dataService: DataService, private router : Router, private route: ActivatedRoute){}\n  const editedData = this.route.snapshot.state.data;\n\n  answer = {\n    name: '',\n    dob:'',\n    email:'',\n    number:'',\n    schoolName:'',\n    qualification:'',\n    percentage:'',\n    hobby:[],\n    gender:'',\n    address:'',\n    summery:'',\n  }\n\n  \n  ngOnInit(): void {\n     this.userDataForm = this.formBuilder.group({\n      'name' : new FormControl('rishit', Validators.required),\n      'dob' : new FormControl('12/30/2002', Validators.required),\n      'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n      'number' : new FormControl('999999', Validators.required),\n      'schoolName': new FormControl('vvp', Validators.required),\n      'qualification': new FormControl('HSC', Validators.required),\n      'percentage': new FormControl('99', Validators.required),\n       'hobby': new FormGroup({\n        'cricket' : new FormControl(null),\n        'travelling' : new FormControl(null),\n        'music' : new FormControl(null),\n        'finance' : new FormControl(null),\n        'others' : new FormControl(null),\n      }),\n      'gender' : new FormControl('male', Validators.required),\n      'address' : new FormControl(null),\n      'summery' : new FormControl(null)\n     })\n    \n     if (data) {\n    this.setFormData(data);\n  }\n  }\n\n  changeQua(e:any) {\n    console.log(e.target.value);\n    this.qualification = e.target.value\n     console.log(this.userDataForm.value.hobby);\n    // console.log(this.qualification);\n    // this.qualification.setValue(e.target.value)\n  }\n\n  onSubmit(data: any) {\n    if (!this.userDataForm.valid) {\n      alert(\"Please enter Valid Data\")\n    }\n    else {\n      console.log(this.userDataForm.value);\n      // console.log(this.userDataForm.value);\n      this.dataService.setSharedData(this.userDataForm.value);\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Data Saved',\n        showConfirmButton: false,\n        timer: 800\n      })\n      this.router.navigate(['/details'])\n    }\n     \n  }\n  edit(editGetData: Event) {\n    console.log(editGetData);\n    \n    // this.userDataForm.setValue({\n    //   'name' : editGetData.name,\n    //   'dob' : new FormControl('12/30/2002', Validators.required),\n    //   'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n    //   'number' : new FormControl('999999', Validators.required),\n    //   'schoolName': new FormControl('vvp', Validators.required),\n    //   'qualification': new FormControl('HSC', Validators.required),\n    //   'percentage': new FormControl('99', Validators.required),\n    //    'hobby': new FormGroup({\n    //     'cricket' : new FormControl(null),\n    //     'travelling' : new FormControl(null),\n    //     'music' : new FormControl(null),\n    //     'finance' : new FormControl(null),\n    //     'others' : new FormControl(null),\n    //   }),\n    //   'gender' : new FormControl('male', Validators.required),\n    //   'address' : new FormControl(null),\n    //   'summery' : new FormControl(null)\n    // })\n  }\n    \n    \n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}