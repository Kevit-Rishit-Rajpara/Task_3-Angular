{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let UserFormComponent = class UserFormComponent {\n  constructor(formBuilder, dataService, router) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.qualification = '';\n    this.hobbyList = [{\n      id: 1,\n      label: 'cricket'\n    }, {\n      id: 2,\n      label: 'music'\n    }, {\n      id: 3,\n      label: 'travelling'\n    }, {\n      id: 4,\n      label: 'finance'\n    }, {\n      id: 5,\n      label: 'others'\n    }];\n  }\n  ngOnInit() {\n    this.userDataForm = this.formBuilder.group({\n      // 'name' : new FormControl('rishit', Validators.required),\n      // 'dob' : new FormControl('12/30/2002', Validators.required),\n      // 'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n      // 'number' : new FormControl('99999', Validators.required),\n      // 'schoolName': new FormControl('vvp', Validators.required),\n      // 'qualification': new FormControl('B.Tech', Validators.required),\n      // 'percentage': new FormControl('99', Validators.required),\n      //  'hobby': new FormGroup({\n      //   'cricket' : new FormControl(true),\n      //   'travelling' : new FormControl(null),\n      //   'music' : new FormControl(null),\n      //   'finance' : new FormControl(null),\n      //   'others' : new FormControl(null),\n      // }),\n      // // 'hobby': this.formBuilder.array([]),\n      // 'gender' : new FormControl('male', Validators.required),\n      // 'address' : new FormControl(null),\n      // 'summery' : new FormControl(null)\n      'name': new FormControl(null, Validators.required),\n      'dob': new FormControl(null, Validators.required),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'number': new FormControl(null, Validators.required),\n      'schoolName': new FormControl(null, Validators.required),\n      'qualification': new FormControl(null, Validators.required),\n      'percentage': new FormControl(null, Validators.required),\n      'hobby': new FormGroup({\n        'cricket': new FormControl(null),\n        'travelling': new FormControl(null),\n        'music': new FormControl(null),\n        'finance': new FormControl(null),\n        'others': new FormControl(null)\n      }),\n      // 'hobby': this.formBuilder.array([]),\n      'gender': new FormControl(null, Validators.required),\n      'address': new FormControl(null),\n      'summery': new FormControl(null)\n    });\n    if (this.dataService.editMode) {\n      this.editedData = this.dataService.getSharedData();\n      this.userDataForm.setValue(this.editedData);\n    }\n  }\n  changeQua(e) {\n    console.log(e.target.value);\n    this.qualification = e.target.value;\n    console.log(this.userDataForm.value.hobby);\n  }\n  onSubmit(data) {\n    if (!this.userDataForm.valid) {\n      alert(\"Please enter Valid Data\");\n    } else {\n      console.log(this.userDataForm.value);\n      // console.log(this.userDataForm.value);\n      // this.dataService.setSharedData(this.userDataForm.value);\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Data Saved Successfully'\n      });\n      this.dataService.postData(this.userDataForm.value).subscribe(response => {\n        console.log(\"Data Added Succesfully in DB.JSON\");\n      });\n      this.router.navigate(['/userList']);\n      this.dataService.editMode = false;\n    }\n  }\n};\nUserFormComponent = __decorate([Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})], UserFormComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Swal","UserFormComponent","constructor","formBuilder","dataService","router","qualification","hobbyList","id","label","ngOnInit","userDataForm","group","required","email","editMode","editedData","getSharedData","setValue","changeQua","e","console","log","target","value","hobby","onSubmit","data","valid","alert","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","postData","subscribe","response","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/user-form/user-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport {  Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit{\n  userDataForm: FormGroup;\n  qualification = '';\n  editedData: any;\n  hobbyList = [\n  { id: 1, label: 'cricket' },\n  { id: 2, label: 'music' },\n  { id: 3, label: 'travelling' },\n  { id: 4, label: 'finance' },\n  { id: 5, label: 'others' }\n];\n\n  constructor(private formBuilder: FormBuilder,private dataService: DataService, private router : Router){}\n\n\n  ngOnInit(): void {\n   \n    this.userDataForm = this.formBuilder.group({\n      // 'name' : new FormControl('rishit', Validators.required),\n      // 'dob' : new FormControl('12/30/2002', Validators.required),\n      // 'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n      // 'number' : new FormControl('99999', Validators.required),\n      // 'schoolName': new FormControl('vvp', Validators.required),\n      // 'qualification': new FormControl('B.Tech', Validators.required),\n      // 'percentage': new FormControl('99', Validators.required),\n      //  'hobby': new FormGroup({\n      //   'cricket' : new FormControl(true),\n      //   'travelling' : new FormControl(null),\n      //   'music' : new FormControl(null),\n      //   'finance' : new FormControl(null),\n      //   'others' : new FormControl(null),\n      // }),\n      // // 'hobby': this.formBuilder.array([]),\n      // 'gender' : new FormControl('male', Validators.required),\n      // 'address' : new FormControl(null),\n      // 'summery' : new FormControl(null)\n      'name': new FormControl(null, Validators.required),\n      'dob' : new FormControl(null, Validators.required),\n      'email' : new FormControl(null, [Validators.required,Validators.email]),\n      'number' : new FormControl(null, Validators.required),\n      'schoolName': new FormControl(null, Validators.required),\n      'qualification': new FormControl(null, Validators.required),\n      'percentage': new FormControl(null, Validators.required),\n       'hobby': new FormGroup({\n        'cricket' : new FormControl(null),\n        'travelling' : new FormControl(null),\n        'music' : new FormControl(null),\n        'finance' : new FormControl(null),\n        'others' : new FormControl(null),\n      }),\n      // 'hobby': this.formBuilder.array([]),\n      'gender' : new FormControl(null, Validators.required),\n      'address' : new FormControl(null),\n      'summery' : new FormControl(null)\n      \n     })\n    \n    if(this.dataService.editMode) {\n      this.editedData = this.dataService.getSharedData();\n      this.userDataForm.setValue(this.editedData)\n    }\n  }\n    \n  changeQua(e:any) {\n    console.log(e.target.value);\n    this.qualification = e.target.value\n     console.log(this.userDataForm.value.hobby);\n  }\n\n  onSubmit(data: any) {\n    if (!this.userDataForm.valid) {\n      alert(\"Please enter Valid Data\")\n    }\n    else {\n      console.log(this.userDataForm.value);\n      // console.log(this.userDataForm.value);\n      // this.dataService.setSharedData(this.userDataForm.value);\n       const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n        Toast.fire({\n          icon: 'success',\n          title: 'Data Saved Successfully'\n        })\n      this.dataService.postData(this.userDataForm.value).subscribe((response: any) => {\n        console.log(\"Data Added Succesfully in DB.JSON\");\n      })\n      this.router.navigate(['/userList'])\n      this.dataService.editMode = false;\n    }\n     \n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}