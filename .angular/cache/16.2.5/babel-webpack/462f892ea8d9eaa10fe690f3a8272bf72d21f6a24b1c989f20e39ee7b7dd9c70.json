{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (this.authService.login(this.loginForm.value)) {\n      // console.log(this.loginForm.value.email);\n      // console.log(this.loginForm.value.password);\n      this.router.navigate(['/userList']);\n      // ***************Alert Box****************\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Signed in successfully'\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top',\n        showConfirmButton: false,\n        timer: 1000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'warning',\n        iconColor: 'red',\n        title: 'Invalid Credentials'\n      });\n      console.log('Not valid');\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"email-group\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [3, \"ngClass\"], [\"id\", \"passsword-group\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [1, \"error\", 3, \"ngClass\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"input\", 4)(8, \"br\");\n        i0.ɵɵelementStart(9, \"p\", 5);\n        i0.ɵɵtext(10, \"Invalid Email!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelement(12, \"input\", 7)(13, \"br\");\n        i0.ɵɵelementStart(14, \"p\", 8);\n        i0.ɵɵtext(15, \"Password is Required!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(18, \"br\")(19, \"br\")(20, \"br\")(21, \"br\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", !ctx.loginForm.get(\"email\").valid && ctx.loginForm.get(\"email\").touched ? \"error_display\" : \"error_hiden\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", !ctx.loginForm.get(\"password\").valid && ctx.loginForm.get(\"password\").touched ? \"error_display\" : \"error_hiden\");\n      }\n    },\n    dependencies: [i3.NgClass, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 805:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nunmatched \\\\\\\"}\\\\\\\".\\\\n    \\u2577\\\\n104 \\u2502 }\\\\n    \\u2502 ^\\\\n    \\u2575\\\\n  src/app/login/login.component.scss 104:1  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[805]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","Swal","LoginComponent","constructor","router","authService","ngOnInit","loginForm","email","required","password","onLogin","login","value","navigate","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","iconColor","console","log","_","i0","ɵɵdirectiveInject","i1","Router","i2","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","get","valid","touched"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/login/login.component.ts","/home/kevit/Documents/Angular Tasks/Task_3/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router, private authService: AuthService) {}\n  loginForm: FormGroup;\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, Validators.required),\n    });\n  }\n\n  onLogin() {\n    if (this.authService.login(this.loginForm.value)) {\n      // console.log(this.loginForm.value.email);\n      // console.log(this.loginForm.value.password);\n      this.router.navigate(['/userList']);\n      // ***************Alert Box****************\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        },\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Signed in successfully',\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top',\n        showConfirmButton: false,\n        timer: 1000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        },\n      });\n      Toast.fire({\n        icon: 'warning',\n        iconColor: 'red',\n        title: 'Invalid Credentials',\n      });\n      console.log('Not valid');\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <h2>Login</h2>\n        <div id=\"email-group\">\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email\"><br>\n          <p [ngClass]=\"!loginForm.get('email').valid && loginForm.get('email').touched ? 'error_display' : 'error_hiden'\" >Invalid Email!</p>\n        </div>\n        <div id=\"passsword-group\">\n          <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\" placeholder=\"Password\"><br>\n          <p class=\"error\" [ngClass]=\"!loginForm.get('password').valid && loginForm.get('password').touched ? 'error_display' : 'error_hiden' \">Password is Required!</p>\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n<br><br><br><br>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}