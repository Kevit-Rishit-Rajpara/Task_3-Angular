{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/';\n    this.editMode = false;\n  }\n  setSharedData(data) {\n    this.sharedData = data;\n  }\n  getSharedData() {\n    return this.sharedData;\n  }\n  postData(data) {\n    return this.http.post(this.url + 'users', data);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DataService","constructor","http","url","editMode","setSharedData","data","sharedData","getSharedData","postData","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport {  Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  url = 'http://localhost:3000/'\n  constructor(private http: HttpClient){}\n\n  private sharedData: any;\n  editMode: boolean = false;\n\n  setSharedData(data: any) {\n    this.sharedData = data;\n  }\n\n  getSharedData() {\n    return this.sharedData;\n  }\n\n  postData(data: any) {\n    return this.http.post(this.url + 'users', data)\n  }\n\n\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,GAAG,GAAG,wBAAwB;IAI9B,KAAAC,QAAQ,GAAY,KAAK;EAHa;EAKtCC,aAAaA,CAACC,IAAS;IACrB,IAAI,CAACC,UAAU,GAAGD,IAAI;EACxB;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEAE,QAAQA,CAACH,IAAS;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,GAAG,OAAO,EAAEG,IAAI,CAAC;EACjD;EAAC,QAAAK,CAAA,G;qBAlBUX,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}