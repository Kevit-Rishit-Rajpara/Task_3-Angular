{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.emailId = 'rishit@gmail.com';\n    this.password = '123';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (this.loginForm.value.email === this.emailId && this.loginForm.value.password === this.password) {\n      console.log(this.loginForm.value.email);\n      console.log(this.loginForm.value.password);\n      this.router.navigate(['/userForm']);\n    } else {\n      alert(\"Please Enter valid Inputs\");\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"email-group\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [3, \"ngClass\"], [\"id\", \"passsword-group\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [1, \"error\", 3, \"ngClass\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Login Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"input\", 5)(8, \"br\");\n        i0.ɵɵelementStart(9, \"p\", 6);\n        i0.ɵɵtext(10, \"Invalid Email!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelement(12, \"input\", 8)(13, \"br\");\n        i0.ɵɵelementStart(14, \"p\", 9);\n        i0.ɵɵtext(15, \"Password is Required!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(18, \"br\")(19, \"br\")(20, \"br\")(21, \"br\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", !ctx.loginForm.get(\"email\").valid && ctx.loginForm.get(\"email\").touched ? \"error_display\" : \"error_hiden\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", !ctx.loginForm.get(\"password\").valid && ctx.loginForm.get(\"password\").touched ? \"error_display\" : \"error_hiden\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i2.NgClass, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 805:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nexpected \\\\\\\"{\\\\\\\".\\\\n   \\u2577\\\\n82 \\u2502     b\\\\n   \\u2502      ^\\\\n   \\u2575\\\\n  src/app/login/login.component.scss 82:6  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[805]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","router","emailId","password","ngOnInit","loginForm","required","email","onLogin","value","console","log","navigate","alert","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","get","valid","touched"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/login/login.component.ts","/home/kevit/Documents/Angular/Task_2/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent  implements OnInit{\n\n  constructor(private router : Router){}\n    loginForm: FormGroup;\n    emailId = 'rishit@gmail.com';\n    password = '123'\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required,Validators.email]),\n      'password': new FormControl(null , Validators.required),\n    })\n  }\n\n  onLogin() {\n    \n    if (this.loginForm.value.email === this.emailId && this.loginForm.value.password === this.password  ) {\n      console.log(this.loginForm.value.email);\n      console.log(this.loginForm.value.password);\n      this.router.navigate(['/userForm'])\n    }\n    else {\n      alert(\"Please Enter valid Inputs\")\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <h2>Login Form</h2>\n        <div id=\"email-group\">\n          <!-- <label for=\"email\">Email</label><br> -->\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email\"><br>\n          <p [ngClass]=\"!loginForm.get('email').valid && loginForm.get('email').touched ? 'error_display' : 'error_hiden'\" >Invalid Email!</p>\n        </div>\n        <div id=\"passsword-group\">\n          <!-- <label for=\"password\">Password</label><br> -->\n          <input type=\"text\" id=\"password\" name=\"password\" formControlName=\"password\" placeholder=\"Password\"><br>\n          <p class=\"error\" [ngClass]=\"!loginForm.get('password').valid && loginForm.get('password').touched ? 'error_display' : 'error_hiden' \">Password is Required!</p>\n        </div>\n        <button type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n<br><br><br><br>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}