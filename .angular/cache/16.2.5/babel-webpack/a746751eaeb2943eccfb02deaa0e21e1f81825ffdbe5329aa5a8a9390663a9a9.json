{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserDataComponent } from './user-data/user-data.component';\nimport { authGuard } from './auth.guard';\nimport { UserListComponent } from './user-list/user-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nif (localStorage.getItem('isA')) {\n  const appRoutes = [{\n    path: 'login',\n    component: LoginComponent\n  },\n  // { path: 'userList', component: UserListComponent },\n  // { path: 'userForm', component: UserFormComponent },\n  // { path: 'user/:id', component: UserDataComponent },\n  // { path: 'editUser/:id', component: UserFormComponent},\n  {\n    path: 'userList',\n    canActivate: [authGuard],\n    component: UserListComponent\n  }, {\n    path: 'userForm',\n    canActivate: [authGuard],\n    component: UserFormComponent\n  }, {\n    path: 'user/:id',\n    canActivate: [authGuard],\n    component: UserDataComponent\n  }, {\n    path: 'editUser/:id',\n    canActivate: [authGuard],\n    component: UserFormComponent\n  }, {\n    path: '**',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }];\n} else {\n  const appRoutes = [{\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'userList',\n    canActivate: [authGuard],\n    component: UserListComponent\n  }, {\n    path: 'userForm',\n    canActivate: [authGuard],\n    component: UserFormComponent\n  }, {\n    path: 'user/:id',\n    canActivate: [authGuard],\n    component: UserDataComponent\n  }, {\n    path: 'editUser/:id',\n    canActivate: [authGuard],\n    component: UserFormComponent\n  }, {\n    path: '**',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }];\n}\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(appRoutes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","UserFormComponent","UserDataComponent","authGuard","UserListComponent","localStorage","getItem","appRoutes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/app-routing.module.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserDataComponent } from './user-data/user-data.component';\nimport { authGuard } from './auth.guard';\nimport { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list/user-list.component';\nif (localStorage.getItem('isA')) {\n  const appRoutes: Routes = [\n    { path: 'login', component: LoginComponent },\n    // { path: 'userList', component: UserListComponent },\n    // { path: 'userForm', component: UserFormComponent },\n    // { path: 'user/:id', component: UserDataComponent },\n    // { path: 'editUser/:id', component: UserFormComponent},\n    {\n      path: 'userList',\n      canActivate: [authGuard],\n      component: UserListComponent,\n    },\n    {\n      path: 'userForm',\n      canActivate: [authGuard],\n      component: UserFormComponent,\n    },\n    {\n      path: 'user/:id',\n      canActivate: [authGuard],\n      component: UserDataComponent,\n    },\n    {\n      path: 'editUser/:id',\n      canActivate: [authGuard],\n      component: UserFormComponent,\n    },\n    { path: '**', redirectTo: '/login', pathMatch: 'full' },\n  ];\n}\nelse {\n  const appRoutes: Routes = [\n    { path: 'login', component: LoginComponent },\n    {\n      path: 'userList',\n      canActivate: [authGuard],\n      component: UserListComponent,\n    },\n    {\n      path: 'userForm',\n      canActivate: [authGuard],\n      component: UserFormComponent,\n    },\n    {\n      path: 'user/:id',\n      canActivate: [authGuard],\n      component: UserDataComponent,\n    },\n    {\n      path: 'editUser/:id',\n      canActivate: [authGuard],\n      component: UserFormComponent,\n    },\n    { path: '**', redirectTo: '/login', pathMatch: 'full' },\n  ];\n}\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AAAA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,iBAAiB,QAAQ,iCAAiC;;;AACnE,IAAIC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,EAAE;EAC/B,MAAMC,SAAS,GAAW,CACxB;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAET;EAAc,CAAE;EAC5C;EACA;EACA;EACA;EACA;IACEQ,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAEL;GACZ,EACD;IACEI,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAER;GACZ,EACD;IACEO,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAEP;GACZ,EACD;IACEM,IAAI,EAAE,cAAc;IACpBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAER;GACZ,EACD;IAAEO,IAAI,EAAE,IAAI;IAAEG,UAAU,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAE,CACxD;CACF,MACI;EACH,MAAML,SAAS,GAAW,CACxB;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAET;EAAc,CAAE,EAC5C;IACEQ,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAEL;GACZ,EACD;IACEI,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAER;GACZ,EACD;IACEO,IAAI,EAAE,UAAU;IAChBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAEP;GACZ,EACD;IACEM,IAAI,EAAE,cAAc;IACpBE,WAAW,EAAE,CAACP,SAAS,CAAC;IACxBM,SAAS,EAAER;GACZ,EACD;IAAEO,IAAI,EAAE,IAAI;IAAEG,UAAU,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAE,CACxD;;AAQH,OAAM,MAAOC,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBjB,YAAY,CAACkB,OAAO,CAACV,SAAS,CAAC,EAC/BR,YAAY;EAAA;;;2EAEXc,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAApB,YAAA;IAAAqB,OAAA,GAFjBrB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}