{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let UserFormComponent = class UserFormComponent {\n  constructor(formBuilder, dataService, router) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.qualification = '';\n    this.editMode = this.dataService.editMode;\n    this.hobbyList = [{\n      id: 1,\n      label: 'cricket'\n    }, {\n      id: 2,\n      label: 'music'\n    }, {\n      id: 3,\n      label: 'travelling'\n    }, {\n      id: 4,\n      label: 'finance'\n    }, {\n      id: 5,\n      label: 'others'\n    }];\n  }\n  ngOnInit() {\n    this.userDataForm = this.formBuilder.group({\n      name: new FormControl(null, Validators.required),\n      dob: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      number: new FormControl(null, [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[6-9]{1}?[0-9]{9}$')]),\n      schoolName: new FormControl(null, Validators.required),\n      qualification: new FormControl(null, Validators.required),\n      percentage: new FormControl(null, [Validators.required, Validators.min(0), Validators.max(100)]),\n      hobby: new FormGroup({\n        cricket: new FormControl(null),\n        travelling: new FormControl(null),\n        music: new FormControl(null),\n        finance: new FormControl(null),\n        others: new FormControl(null)\n      }),\n      // 'hobby': this.formBuilder.array([]),\n      gender: new FormControl(null, Validators.required),\n      address: new FormControl(null),\n      summary: new FormControl(null),\n      id: new FormControl(null)\n    });\n    if (this.dataService.editMode) {\n      this.dataService.fetchData(+localStorage.getItem('diplayIndex')).subscribe(response => {\n        console.log(response);\n        this.userDataForm.setValue(response);\n      });\n      this.saveFormToLocalStorage();\n      this.populateFormFromLocalStorage();\n    }\n    this.populateFormFromLocalStorage();\n  }\n  changeQua(e) {\n    // console.log(e.target.value);\n    this.qualification = e.target.value;\n    //  console.log(this.userDataForm.value.hobby);\n  }\n\n  populateFormFromLocalStorage() {\n    const formData = JSON.parse(localStorage.getItem('formData'));\n    if (formData) {\n      this.userDataForm.patchValue(formData);\n    }\n  }\n  saveFormToLocalStorage() {\n    const formData = this.userDataForm.value;\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }\n  onSubmit(data) {\n    if (!this.userDataForm.valid) {\n      alert('Please enter Valid Data');\n    } else {\n      localStorage.removeItem(\"formData\");\n      // console.log(this.userDataForm.value);\n      if (this.editMode) {\n        this.dataService.putData(this.userDataForm.value).subscribe(response => {\n          console.log('Data Updated Successfully!');\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 1000,\n            timerProgressBar: true,\n            didOpen: toast => {\n              toast.addEventListener('mouseenter', Swal.stopTimer);\n              toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n          });\n          Toast.fire({\n            icon: 'success',\n            title: 'Data Updated Successfully'\n          });\n        });\n        this.dataService.editMode = false;\n        this.router.navigate(['/userList']);\n      } else {\n        this.dataService.postData(this.userDataForm.value).subscribe(response => {\n          console.log('Data Added Succesfully in DB.JSON');\n        });\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: 'success',\n          title: 'Data Saved Successfully'\n        });\n        this.router.navigate(['/userList']);\n      }\n    }\n  }\n};\nUserFormComponent = __decorate([Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})], UserFormComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Swal","UserFormComponent","constructor","formBuilder","dataService","router","qualification","editMode","hobbyList","id","label","ngOnInit","userDataForm","group","name","required","dob","email","number","pattern","schoolName","percentage","min","max","hobby","cricket","travelling","music","finance","others","gender","address","summary","fetchData","localStorage","getItem","subscribe","response","console","log","setValue","saveFormToLocalStorage","populateFormFromLocalStorage","changeQua","e","target","value","formData","JSON","parse","patchValue","setItem","stringify","onSubmit","data","valid","alert","removeItem","putData","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","navigate","postData","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/user-form/user-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss'],\n})\nexport class UserFormComponent implements OnInit {\n  userDataForm: FormGroup;\n  qualification = '';\n  editMode = this.dataService.editMode;\n  editedData: any;\n  hobbyList = [\n    { id: 1, label: 'cricket' },\n    { id: 2, label: 'music' },\n    { id: 3, label: 'travelling' },\n    { id: 4, label: 'finance' },\n    { id: 5, label: 'others' },\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.userDataForm = this.formBuilder.group({\n      name: new FormControl(null, Validators.required),\n      dob: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      number: new FormControl(null, [\n        Validators.required,\n        Validators.pattern('^((\\\\+91-?)|0)?[6-9]{1}?[0-9]{9}$'),\n      ]),\n      schoolName: new FormControl(null, Validators.required),\n      qualification: new FormControl(null, Validators.required),\n      percentage: new FormControl(null, [\n        Validators.required,\n        Validators.min(0),\n        Validators.max(100),\n      ]),\n      hobby: new FormGroup({\n        cricket: new FormControl(null),\n        travelling: new FormControl(null),\n        music: new FormControl(null),\n        finance: new FormControl(null),\n        others: new FormControl(null),\n      }),\n      // 'hobby': this.formBuilder.array([]),\n      gender: new FormControl(null, Validators.required),\n      address: new FormControl(null),\n      summary: new FormControl(null),\n      id: new FormControl(null),\n    });\n\n    if (this.dataService.editMode) {\n      this.dataService\n        .fetchData(+localStorage.getItem('diplayIndex'))\n        .subscribe((response: any) => {\n          console.log(response);\n          this.userDataForm.setValue(response);\n        });\n      this.saveFormToLocalStorage()\n      this.populateFormFromLocalStorage();\n    }\n    this.populateFormFromLocalStorage();\n  }\n\n  changeQua(e: any) {\n    // console.log(e.target.value);\n    this.qualification = e.target.value;\n    //  console.log(this.userDataForm.value.hobby);\n  }\n  populateFormFromLocalStorage() {\n    const formData = JSON.parse(localStorage.getItem('formData'));\n    if (formData) {\n      this.userDataForm.patchValue(formData);\n    }\n  }\n\n  saveFormToLocalStorage() {\n    const formData = this.userDataForm.value;\n    localStorage.setItem('formData', JSON.stringify(formData));\n  }\n\n  onSubmit(data: any) {\n    if (!this.userDataForm.valid) {\n      alert('Please enter Valid Data');\n    } else {\n      localStorage.removeItem(\"formData\")\n      // console.log(this.userDataForm.value);\n      if (this.editMode) {\n        this.dataService\n          .putData(this.userDataForm.value)\n          .subscribe((response: any) => {\n            console.log('Data Updated Successfully!');\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 1000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n              },\n            });\n            Toast.fire({\n              icon: 'success',\n              title: 'Data Updated Successfully',\n            });\n          });\n        this.dataService.editMode = false;\n        this.router.navigate(['/userList']);\n      } else {\n        this.dataService\n          .postData(this.userDataForm.value)\n          .subscribe((response: any) => {\n            console.log('Data Added Succesfully in DB.JSON');\n          });\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n          },\n        });\n        Toast.fire({\n          icon: 'success',\n          title: 'Data Saved Successfully',\n        });\n        this.router.navigate(['/userList']);\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}