{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nexport const authGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (localStorage.getItem('isAuthenticated')) {\n    if (authService.isAuthenticatedUser()) {\n      return true;\n    } else {\n      router.navigate(['/login']);\n      return false;\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","authService","router","localStorage","getItem","isAuthenticatedUser","navigate"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router)\n  if (localStorage.getItem('isAuthenticated')) {\n     if (authService.isAuthenticatedUser()) {\n       return true;\n     } else {\n       router.navigate(['/login']);\n       return false;\n     }\n  }\n  else {\n    return false\n  }\n \n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAC7B,IAAIO,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAE;IAC1C,IAAIH,WAAW,CAACI,mBAAmB,EAAE,EAAE;MACrC,OAAO,IAAI;KACZ,MAAM;MACLH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC3B,OAAO,KAAK;;GAEhB,MACI;IACH,OAAO,KAAK;;AAGhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}