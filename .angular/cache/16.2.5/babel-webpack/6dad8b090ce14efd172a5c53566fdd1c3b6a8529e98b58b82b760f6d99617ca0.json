{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.myData = new EventEmitter();\n  }\n  dataemit(data) {\n    this.myData.emit(data);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","DataService","constructor","myData","dataemit","data","emit","_","_2","factory","ɵfac","providedIn"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/data.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n myData = new EventEmitter<any>()\n  constructor() { }\n\n  dataemit(data: string) {\n    this.myData.emit(data)\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAMxD,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IADD,KAAAC,MAAM,GAAG,IAAIH,YAAY,EAAO;EACf;EAEhBI,QAAQA,CAACC,IAAY;IACnB,IAAI,CAACF,MAAM,CAACG,IAAI,CAACD,IAAI,CAAC;EACxB;EAAC,QAAAE,CAAA,G;qBANUN,WAAW;EAAA;EAAA,QAAAO,EAAA,G;WAAXP,WAAW;IAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}