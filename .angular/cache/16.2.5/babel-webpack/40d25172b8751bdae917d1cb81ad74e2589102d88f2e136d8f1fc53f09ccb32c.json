{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let UserFormComponent = class UserFormComponent {\n  constructor(dataService, router) {\n    this.dataService = dataService;\n    this.router = router;\n    this.submitted = false;\n    this.qualification = '';\n    this.answer = {\n      name: '',\n      dob: '',\n      email: '',\n      number: '',\n      schoolName: '',\n      qualification: '',\n      percentage: '',\n      hobby: [],\n      gender: '',\n      address: '',\n      summery: ''\n    };\n  }\n  ngOnInit() {\n    this.userDataForm = new FormGroup({\n      'name': new FormControl('rishit', Validators.required),\n      'dob': new FormControl('30/12/2002', Validators.required),\n      'email': new FormControl('rishit@gmail.com', [Validators.required, Validators.email]),\n      'number': new FormControl('999999', Validators.required),\n      'schoolName': new FormControl('vvp', Validators.required),\n      'qualification': new FormControl('HSC', Validators.required),\n      'percentage': new FormControl('99', Validators.required),\n      'hobby': new FormGroup({\n        'cricket': new FormControl(null),\n        'travelling': new FormControl(null),\n        'music': new FormControl(null),\n        'finance': new FormControl(null),\n        'others': new FormControl(null)\n      }),\n      'gender': new FormControl('male', Validators.required),\n      'address': new FormControl(null),\n      'summery': new FormControl(null)\n    });\n    this.dataService.sharedDataChanged.subscribe(data => {\n      this.editedData = data;\n    });\n  }\n  changeQua(e) {\n    console.log(e.target.value);\n    this.qualification = e.target.value;\n    console.log(this.userDataForm.value.hobby);\n    // console.log(this.qualification);\n    // this.qualification.setValue(e.target.value)\n  }\n\n  onSubmit(data) {\n    console.log(this.userDataForm.value);\n    this.submitted = true;\n    this.answer.name = this.userDataForm.value.name;\n    this.answer.dob = this.userDataForm.value.dob;\n    this.answer.email = this.userDataForm.value.email;\n    this.answer.number = this.userDataForm.value.number;\n    this.answer.schoolName = this.userDataForm.value.schoolName;\n    this.answer.qualification = this.userDataForm.value.qualification;\n    this.answer.percentage = this.userDataForm.value.percentage;\n    this.answer.hobby = this.userDataForm.value.hobby;\n    this.answer.gender = this.userDataForm.value.gender;\n    this.answer.address = this.userDataForm.value.address;\n    this.answer.summery = this.userDataForm.value.summery;\n    // console.log(this.userDataForm.value);\n    this.dataService.setSharedData(this.userDataForm.value);\n    this.router.navigate(['/details']);\n  }\n};\nUserFormComponent = __decorate([Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})], UserFormComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","UserFormComponent","constructor","dataService","router","submitted","qualification","answer","name","dob","email","number","schoolName","percentage","hobby","gender","address","summery","ngOnInit","userDataForm","required","sharedDataChanged","subscribe","data","editedData","changeQua","e","console","log","target","value","onSubmit","setSharedData","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/user-form/user-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormArray, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit{\n  // @Output() sendData = new EventEmitter<any>();\n  userDataForm: FormGroup;\n  submitted = false;\n  qualification = '';\n  editedData: any;\n\n  constructor(private dataService: DataService, private router : Router){}\n\n  answer = {\n    name: '',\n    dob:'',\n    email:'',\n    number:'',\n    schoolName:'',\n    qualification:'',\n    percentage:'',\n    hobby:[],\n    gender:'',\n    address:'',\n    summery:'',\n  }\n  \n  ngOnInit(): void {\n     this.userDataForm = new FormGroup({\n      'name' : new FormControl('rishit', Validators.required),\n      'dob' : new FormControl('30/12/2002', Validators.required),\n      'email' : new FormControl('rishit@gmail.com', [Validators.required,Validators.email]),\n      'number' : new FormControl('999999', Validators.required),\n      'schoolName': new FormControl('vvp', Validators.required),\n      'qualification': new FormControl('HSC', Validators.required),\n      'percentage': new FormControl('99', Validators.required),\n       'hobby': new FormGroup({\n        'cricket' : new FormControl(null),\n        'travelling' : new FormControl(null),\n        'music' : new FormControl(null),\n        'finance' : new FormControl(null),\n        'others' : new FormControl(null),\n      }),\n      'gender' : new FormControl('male', Validators.required),\n      'address' : new FormControl(null),\n      'summery' : new FormControl(null)\n     })\n    this.dataService.sharedDataChanged.subscribe((data) => {\n      this.editedData = data;\n    });\n  }\n\n  changeQua(e:any) {\n    console.log(e.target.value);\n    this.qualification = e.target.value\n     console.log(this.userDataForm.value.hobby);\n    // console.log(this.qualification);\n    // this.qualification.setValue(e.target.value)\n  }\n\n  onSubmit(data: any) {\n    console.log(this.userDataForm.value);\n    this.submitted= true\n    this.answer.name = this.userDataForm.value.name\n    this.answer.dob = this.userDataForm.value.dob\n    this.answer.email = this.userDataForm.value.email\n    this.answer.number = this.userDataForm.value.number\n    this.answer.schoolName = this.userDataForm.value.schoolName\n    this.answer.qualification = this.userDataForm.value.qualification\n    this.answer.percentage = this.userDataForm.value.percentage\n    this.answer.hobby = this.userDataForm.value.hobby\n    this.answer.gender = this.userDataForm.value.gender\n    this.answer.address = this.userDataForm.value.address\n    this.answer.summery = this.userDataForm.value.summery\n\n    // console.log(this.userDataForm.value);\n    this.dataService.setSharedData(this.userDataForm.value);\n     this.router.navigate(['/details'])\n    \n  }\n\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}