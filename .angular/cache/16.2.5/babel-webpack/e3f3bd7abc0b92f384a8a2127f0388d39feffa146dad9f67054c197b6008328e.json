{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nlet appRoutes;\n// if (localStorage.getItem('isAuthenticated')) {\n//   appRoutes = [\n//     { path: 'login', component: LoginComponent },\n//     { path: 'userList', component: UserListComponent },\n//     { path: 'userForm', component: UserFormComponent },\n//     { path: 'user/:id', component: UserDataComponent },\n//     { path: 'editUser/:id', component: UserFormComponent },\n//     { path: '**', redirectTo: '/login', pathMatch: 'full' },\n//   ];\n// } else {\n//   appRoutes = [\n//     { path: 'login', component: LoginComponent },\n//     {\n//       path: 'userList',\n//       canActivate: [authGuard],\n//       component: UserListComponent,\n//     },\n//     {\n//       path: 'userForm',\n//       canActivate: [authGuard],\n//       component: UserFormComponent,\n//     },\n//     {\n//       path: 'user/:id',\n//       canActivate: [authGuard],\n//       component: UserDataComponent,\n//     },\n//     {\n//       path: 'editUser/:id',\n//       canActivate: [authGuard],\n//       component: UserFormComponent,\n//     },\n//     { path: '**', redirectTo: '/login', pathMatch: 'full' },\n//   ];\n// }\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(appRoutes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","appRoutes","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["/home/kevit/Documents/Angular Tasks/Task_3/src/app/app-routing.module.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserDataComponent } from './user-data/user-data.component';\nimport { authGuard } from './auth.guard';\nimport { NgModule } from '@angular/core';\nimport { UserListComponent } from './user-list/user-list.component';\nlet appRoutes: Routes;\n\n// if (localStorage.getItem('isAuthenticated')) {\n//   appRoutes = [\n//     { path: 'login', component: LoginComponent },\n//     { path: 'userList', component: UserListComponent },\n//     { path: 'userForm', component: UserFormComponent },\n//     { path: 'user/:id', component: UserDataComponent },\n//     { path: 'editUser/:id', component: UserFormComponent },\n//     { path: '**', redirectTo: '/login', pathMatch: 'full' },\n//   ];\n// } else {\n//   appRoutes = [\n//     { path: 'login', component: LoginComponent },\n//     {\n//       path: 'userList',\n//       canActivate: [authGuard],\n//       component: UserListComponent,\n//     },\n//     {\n//       path: 'userForm',\n//       canActivate: [authGuard],\n//       component: UserFormComponent,\n//     },\n//     {\n//       path: 'user/:id',\n//       canActivate: [authGuard],\n//       component: UserDataComponent,\n//     },\n//     {\n//       path: 'editUser/:id',\n//       canActivate: [authGuard],\n//       component: UserFormComponent,\n//     },\n//     { path: '**', redirectTo: '/login', pathMatch: 'full' },\n//   ];\n// }\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AAAA,SAASA,YAAY,QAAgB,iBAAiB;;;AAOtD,IAAIC,SAAiB;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,OAAM,MAAOC,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBL,YAAY,CAACM,OAAO,CAACL,SAAS,CAAC,EAC/BD,YAAY;EAAA;;;2EAEXE,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAAR,YAAA;IAAAS,OAAA,GAFjBT,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}