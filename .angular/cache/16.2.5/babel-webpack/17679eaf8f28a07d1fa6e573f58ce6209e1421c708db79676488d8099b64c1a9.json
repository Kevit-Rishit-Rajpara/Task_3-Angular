{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Invalid Email!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Password is Required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'Task_2';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    console.log(this.loginForm.value);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"email-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"id\", \"passsw\"], [\"for\", \"password\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Enter Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"input\", 6)(9, \"br\");\n        i0.ɵɵtemplate(10, AppComponent_p_10_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Enter Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\")(15, \"input\", 10)(16, \"br\");\n        i0.ɵɵtemplate(17, AppComponent_p_17_Template, 2, 0, \"p\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 18vw;\\n  padding: 1rem;\\n  margin-inline: auto;\\n  margin-top: 20vh;\\n  background-color: aqua;\\n}\\n.container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 2rem;\\n}\\n.container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7QUFDSjtBQUNJO0VBQ0ksbUJBQUE7QUFDUjtBQUlJO0VBQ0ksWUFBQTtBQUZSIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcbiAgICBtYXgtd2lkdGg6IDE4dnc7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBtYXJnaW4taW5saW5lOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDIwdmg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXF1YTtcblxuICAgIGxhYmVse1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIH1cbiAgICBpbnB1dHtcbiAgICAgICAgLy8gbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICB9XG4gICAgYnV0dG9ue1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","title","ngOnInit","loginForm","required","email","onLogin","console","log","value","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","AppComponent_p_10_Template","AppComponent_p_17_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","valid","touched","tmp_2_0"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/app.component.ts","/home/kevit/Documents/Angular/Task_2/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Task_2';\n\n   loginForm!: FormGroup;\n  \n\n  \n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required,Validators.email]),\n      'password': new FormControl(null , Validators.required),\n    })\n  }\n\n  onLogin() {\n    console.log(this.loginForm.value);\n    \n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <div id=\"email-group\">\n          <label for=\"email\">Enter Email</label><br>\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\"><br>\n          <p *ngIf=\"!loginForm.get('email')?.valid && loginForm.get('email')?.touched\">Invalid Email!</p>\n        </div>\n        <div id=\"passsw\">\n          <label for=\"password\">Enter Password</label><br>\n          <input type=\"text\" id=\"password\" name=\"password\" formControlName=\"password\"><br>\n          <p *ngIf=\"!loginForm.get('password')?.valid && loginForm.get('password')?.touched\">Password is Required!</p>\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICMzDC,EAAA,CAAAC,cAAA,QAA6E;IAAAD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAK/FH,EAAA,CAAAC,cAAA,QAAmF;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADJtH,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,QAAQ;;EAMhBC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAIV,SAAS,CAAC;MAC7B,OAAO,EAAE,IAAID,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACW,KAAK,CAAC,CAAC;MACtE,UAAU,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAGE,UAAU,CAACU,QAAQ;KACvD,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC;EAEnC;EAAC,QAAAC,CAAA,G;qBAjBUX,YAAY;EAAA;EAAA,QAAAY,EAAA,G;UAAZZ,YAAY;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBvB,EAAA,CAAAC,cAAA,aAAuB;QAGaD,EAAA,CAAAyB,UAAA,sBAAAC,+CAAA;UAAA,OAAYF,GAAA,CAAAb,OAAA,EAAS;QAAA,EAAC;QAClDX,EAAA,CAAAC,cAAA,aAAsB;QACDD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAAAH,EAAA,CAAA2B,SAAA,SAAI;QAE1C3B,EAAA,CAAA4B,UAAA,KAAAC,0BAAA,eAA+F;QACjG7B,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,cAAiB;QACOD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAAAH,EAAA,CAAA2B,SAAA,UAAI;QAEhD3B,EAAA,CAAA4B,UAAA,KAAAE,0BAAA,eAA4G;QAC9G9B,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,kBAAsB;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;QAXhCH,EAAA,CAAA+B,SAAA,GAAuB;QAAvB/B,EAAA,CAAAgC,UAAA,cAAAR,GAAA,CAAAhB,SAAA,CAAuB;QAIrBR,EAAA,CAAA+B,SAAA,GAAuE;QAAvE/B,EAAA,CAAAgC,UAAA,YAAAC,OAAA,GAAAT,GAAA,CAAAhB,SAAA,CAAA0B,GAAA,4BAAAD,OAAA,CAAAE,KAAA,OAAAF,OAAA,GAAAT,GAAA,CAAAhB,SAAA,CAAA0B,GAAA,4BAAAD,OAAA,CAAAG,OAAA,EAAuE;QAKvEpC,EAAA,CAAA+B,SAAA,GAA6E;QAA7E/B,EAAA,CAAAgC,UAAA,YAAAK,OAAA,GAAAb,GAAA,CAAAhB,SAAA,CAAA0B,GAAA,+BAAAG,OAAA,CAAAF,KAAA,OAAAE,OAAA,GAAAb,GAAA,CAAAhB,SAAA,CAAA0B,GAAA,+BAAAG,OAAA,CAAAD,OAAA,EAA6E"},"metadata":{},"sourceType":"module","externalDependencies":[]}