{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.emailId = 'rishit@gmail.com';\n    this.password = '123';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value.email);\n      console.log(this.loginForm.value.password);\n      this.router.navigate(['/userForm']);\n    } else {\n      alert(\"Please Enter valid Inputs\");\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"email-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [3, \"ngClass\"], [\"id\", \"passsword-group\"], [\"for\", \"password\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\"], [1, \"error\", 3, \"ngClass\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Login Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"input\", 6)(11, \"br\");\n        i0.ɵɵelementStart(12, \"p\", 7);\n        i0.ɵɵtext(13, \"Invalid Email!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\")(18, \"input\", 10)(19, \"br\");\n        i0.ɵɵelementStart(20, \"p\", 11);\n        i0.ɵɵtext(21, \"Password is Required!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵtext(23, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(24, \"br\")(25, \"br\")(26, \"br\")(27, \"br\");\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", !((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched) ? \"error_display\" : \"error_hiden\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", !((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched) ? \"error_display\" : \"error_hiden\");\n      }\n    },\n    dependencies: [i2.NgClass, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 20vw;\\n  padding: 1rem;\\n  margin-inline: auto;\\n  margin-top: 20vh;\\n  background-color: aqua;\\n  border-radius: 0.5rem;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: xx-large;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: larger;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border-radius: 0.5rem;\\n  outline: none;\\n  border: none;\\n  padding: 0.4rem;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: auto;\\n  width: 10rem;\\n  height: 2rem;\\n  border-radius: 0.8rem;\\n  outline: none;\\n  border: none;\\n  color: green;\\n  font-size: x-large;\\n  font-weight: 700;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   #email-group[_ngcontent-%COMP%] {\\n  margin-bottom: 0.5rem;\\n  padding-inline: auto;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   #password-group[_ngcontent-%COMP%] {\\n  margin-bottom: 0.5rem;\\n  padding-inline: auto;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .error_display[_ngcontent-%COMP%] {\\n  font-size: smaller;\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  visibility: visible;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .error_hiden[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0FBQ0o7QUFDSTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FBQ1I7QUFBUTtFQUNJLG1CQUFBO0FBRVo7QUFDUTtFQUNJLGlCQUFBO0FBQ1o7QUFDUTtFQUNJLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FBQ1o7QUFDUTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQUNaO0FBQ1E7RUFDSSxxQkFBQTtFQUNBLG9CQUFBO0FBQ1o7QUFDUTtFQUNJLHFCQUFBO0VBQ0Esb0JBQUE7QUFDWjtBQUNRO0VBQ0ksa0JBQUE7RUFDQSxnREFBQTtFQUNBLG1CQUFBO0FBQ1o7QUFDUztFQUNHLGtCQUFBO0FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIG1heC13aWR0aDogMjB2dztcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIG1hcmdpbi1pbmxpbmU6IGF1dG87XG4gICAgbWFyZ2luLXRvcDogMjB2aDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcblxuICAgIGZvcm17XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGgye1xuICAgICAgICAgICAgZm9udC1zaXplOiB4eC1sYXJnZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhYmVse1xuICAgICAgICAgICAgZm9udC1zaXplOiBsYXJnZXI7ICAgICBcbiAgICAgICAgfVxuICAgICAgICBpbnB1dHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwLjRyZW07XG4gICAgICAgIH1cbiAgICAgICAgYnV0dG9ue1xuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IDEwcmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAycmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMC44cmVtO1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiBncmVlbjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIH1cbiAgICAgICAgI2VtYWlsLWdyb3Vwe1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgICAgICAgICAgcGFkZGluZy1pbmxpbmU6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgI3Bhc3N3b3JkLWdyb3Vwe1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgICAgICAgICAgcGFkZGluZy1pbmxpbmU6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgLmVycm9yX2Rpc3BsYXl7XG4gICAgICAgICAgICBmb250LXNpemU6IHNtYWxsZXI7XG4gICAgICAgICAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgICB9ICAgXG4gICAgICAgICAuZXJyb3JfaGlkZW57XG4gICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICB9ICAgICAgICAgICAgICAgIFxuICAgIH1cbiAgICBcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","router","emailId","password","ngOnInit","loginForm","required","email","onLogin","valid","console","log","value","navigate","alert","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","tmp_1_0","get","touched","tmp_2_0"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/login/login.component.ts","/home/kevit/Documents/Angular/Task_2/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent  implements OnInit{\n\n  constructor(private router : Router){}\n    loginForm!: FormGroup;\n    emailId = 'rishit@gmail.com';\n    password = '123'\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required,Validators.email]),\n      'password': new FormControl(null , Validators.required),\n    })\n  }\n\n  onLogin() {\n    \n    if (this.loginForm.valid ) {\n      console.log(this.loginForm.value.email);\n      console.log(this.loginForm.value.password);\n      this.router.navigate(['/userForm'])\n    }\n    else {\n      alert(\"Please Enter valid Inputs\")\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <h2>Login Form</h2>\n        <div id=\"email-group\">\n          <label for=\"email\">Email</label><br>\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\"><br>\n          <p [ngClass]=\"!loginForm.get('email')?.valid && loginForm.get('email')?.touched ? 'error_display' : 'error_hiden'\" >Invalid Email!</p>\n        </div>\n        <div id=\"passsword-group\">\n          <label for=\"password\">Password</label><br>\n          <input type=\"text\" id=\"password\" name=\"password\" formControlName=\"password\"><br>\n          <p class=\"error\" [ngClass]=\"!loginForm.get('password')?.valid && loginForm.get('password')?.touched ? 'error_display' : 'error_hiden' \">Password is Required!</p>\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n<br><br><br><br>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}