{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Task_2';\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, Validators.required)\n    });\n  }\n  onLogin() {\n    console.log(this.loginForm.value);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"email-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [3, \"ngClass\"], [\"id\", \"passsword-group\"], [\"for\", \"password\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\"], [1, \"error\", 3, \"ngClass\"], [\"type\", \"submit\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Enter Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"input\", 6)(11, \"br\");\n        i0.ɵɵelementStart(12, \"p\", 7);\n        i0.ɵɵtext(13, \"Invalid Email!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Enter Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\")(18, \"input\", 10)(19, \"br\");\n        i0.ɵɵelementStart(20, \"p\", 11);\n        i0.ɵɵtext(21, \"Password is Required!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵtext(23, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", !((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched) ? \"error_display\" : \"error_hiden\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", !((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched) ? \"error_display\" : \"error_hiden\");\n      }\n    },\n    dependencies: [i1.NgClass, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 595:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nexpected \\\\\\\"{\\\\\\\".\\\\n   \\u2577\\\\n35 \\u2502             f\\\\n   \\u2502              ^\\\\n   \\u2575\\\\n  src/app/app.component.scss 35:14  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[595]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","AppComponent","constructor","title","ngOnInit","loginForm","required","email","onLogin","console","log","value","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AppComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","tmp_1_0","get","valid","touched","tmp_2_0"],"sources":["/home/kevit/Documents/Angular/Task_2/src/app/app.component.ts","/home/kevit/Documents/Angular/Task_2/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Task_2';\n\n   loginForm!: FormGroup;\n  \n\n  \n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required,Validators.email]),\n      'password': new FormControl(null , Validators.required),\n    })\n  }\n\n  onLogin() {\n    console.log(this.loginForm.value);\n    \n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n        <h2>Login</h2>\n        <div id=\"email-group\">\n          <label for=\"email\">Enter Email</label><br>\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\"><br>\n          <p [ngClass]=\"!loginForm.get('email')?.valid && loginForm.get('email')?.touched ? 'error_display' : 'error_hiden'\" >Invalid Email!</p>\n        </div>\n        <div id=\"passsword-group\">\n          <label for=\"password\">Enter Password</label><br>\n          <input type=\"text\" id=\"password\" name=\"password\" formControlName=\"password\"><br>\n          <p class=\"error\" [ngClass]=\"!loginForm.get('password')?.valid && loginForm.get('password')?.touched ? 'error_display' : 'error_hiden' \">Password is Required!</p>\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAOnE,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,QAAQ;;EAMhBC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAIN,SAAS,CAAC;MAC7B,OAAO,EAAE,IAAID,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,KAAK,CAAC,CAAC;MACtE,UAAU,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAGE,UAAU,CAACM,QAAQ;KACvD,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC;EAEnC;EAAC,QAAAC,CAAA,G;qBAjBUX,YAAY;EAAA;EAAA,QAAAY,EAAA,G;UAAZZ,YAAY;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBE,EAAA,CAAAC,cAAA,aAAuB;QAGaD,EAAA,CAAAE,UAAA,sBAAAC,+CAAA;UAAA,OAAYJ,GAAA,CAAAb,OAAA,EAAS;QAAA,EAAC;QAClDc,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAI,MAAA,YAAK;QAAAJ,EAAA,CAAAK,YAAA,EAAK;QACdL,EAAA,CAAAC,cAAA,aAAsB;QACDD,EAAA,CAAAI,MAAA,kBAAW;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QAAAL,EAAA,CAAAM,SAAA,SAAI;QAE1CN,EAAA,CAAAC,cAAA,YAAoH;QAAAD,EAAA,CAAAI,MAAA,sBAAc;QAAAJ,EAAA,CAAAK,YAAA,EAAI;QAExIL,EAAA,CAAAC,cAAA,cAA0B;QACFD,EAAA,CAAAI,MAAA,sBAAc;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QAAAL,EAAA,CAAAM,SAAA,UAAI;QAEhDN,EAAA,CAAAC,cAAA,aAAwI;QAAAD,EAAA,CAAAI,MAAA,6BAAqB;QAAAJ,EAAA,CAAAK,YAAA,EAAI;QAEnKL,EAAA,CAAAC,cAAA,kBAAsB;QAAAD,EAAA,CAAAI,MAAA,aAAK;QAAAJ,EAAA,CAAAK,YAAA,EAAS;;;;;QAZhCL,EAAA,CAAAO,SAAA,GAAuB;QAAvBP,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAhB,SAAA,CAAuB;QAKtBiB,EAAA,CAAAO,SAAA,GAA+G;QAA/GP,EAAA,CAAAQ,UAAA,eAAAC,OAAA,GAAAV,GAAA,CAAAhB,SAAA,CAAA2B,GAAA,4BAAAD,OAAA,CAAAE,KAAA,OAAAF,OAAA,GAAAV,GAAA,CAAAhB,SAAA,CAAA2B,GAAA,4BAAAD,OAAA,CAAAG,OAAA,oCAA+G;QAKjGZ,EAAA,CAAAO,SAAA,GAAsH;QAAtHP,EAAA,CAAAQ,UAAA,eAAAK,OAAA,GAAAd,GAAA,CAAAhB,SAAA,CAAA2B,GAAA,+BAAAG,OAAA,CAAAF,KAAA,OAAAE,OAAA,GAAAd,GAAA,CAAAhB,SAAA,CAAA2B,GAAA,+BAAAG,OAAA,CAAAD,OAAA,oCAAsH"},"metadata":{},"sourceType":"module","externalDependencies":[]}